import asyncio
import subprocess
import sys
from pathlib import Path
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from dotenv import load_dotenv
from telegram.ext import Application, CommandHandler, CallbackQueryHandler
from telegram.request import HTTPXRequest
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–æ—Ç–∞
sys.path.append(str(Path(__file__).parent / "bot"))
from bot.bot_posting import send_news_to_admin, button_handler, start

BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
PROXY_URL = os.getenv("PROXY_URL")  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–∫—Å–∏

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot_app = None


async def run_news_pipeline():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    global bot_app

    print("\n" + "="*60)
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("="*60 + "\n")

    try:
        # –®–∞–≥ 1: –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        print("üì• –®–∞–≥ 1/3: –°–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ RSS...")
        result = subprocess.run(
            [sys.executable, "bot/fetch_news.py"],
            capture_output=True,
            text=True,
            check=True
        )
        print(result.stdout)
        print("‚úÖ –ù–æ–≤–æ—Å—Ç–∏ —Å–æ–±—Ä–∞–Ω—ã\n")

        # –®–∞–≥ 2: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ AI
        print("ü§ñ –®–∞–≥ 2/3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ Gemini AI...")
        result = subprocess.run(
            [sys.executable, "bot/process_ai.py"],
            capture_output=True,
            text=True,
            check=True
        )
        print(result.stdout)
        print("‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã\n")

        # –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∞–¥–º–∏–Ω—É —á–µ—Ä–µ–∑ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –±–æ—Ç–∞
        print("üì¨ –®–∞–≥ 3/3: –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ Telegram...")
        if bot_app:
            await send_news_to_admin(bot_app)
            print("‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã\n")
        else:
            print("‚ö†Ô∏è –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω\n")

        print("="*60)
        print("‚ú® –¶–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("="*60 + "\n")

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stdout}")
        print(f"–û—à–∏–±–∫–∏: {e.stderr}")
    except Exception as e:
        print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


async def post_init(application: Application):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    global bot_app
    bot_app = application

    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")

    # –°–æ–∑–¥–∞—ë–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = AsyncIOScheduler()

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É: –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
    scheduler.add_job(
        run_news_pipeline,
        trigger=CronTrigger(hour="*/3"),
        id="news_pipeline",
        name="–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π",
        replace_existing=True
    )

    scheduler.start()
    print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω")
    print("‚è∞ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫:", scheduler.get_job("news_pipeline").next_run_time)
    print()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ bot_data
    application.bot_data["scheduler"] = scheduler

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —Å—Ä–∞–∑—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    # await run_news_pipeline()

async def post_shutdown(application: Application):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
    scheduler = application.bot_data.get("scheduler")
    if scheduler:
        scheduler.shutdown()
        print("üõë –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    # –û—Ç–∫–ª—é—á–∞–µ–º –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è immediate output
    sys.stdout.reconfigure(line_buffering=True)
    sys.stderr.reconfigure(line_buffering=True)

    print("üåü –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π", flush=True)
    print("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞", flush=True)
    print("ü§ñ –ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏\n", flush=True)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API...", flush=True)

    try:
        # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
        builder = Application.builder().token(BOT_TOKEN)

        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø—Ä–æ–∫—Å–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if PROXY_URL:
            print(f"üîê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–∫—Å–∏: {PROXY_URL}", flush=True)
            request = HTTPXRequest(proxy=PROXY_URL, connect_timeout=30.0, read_timeout=30.0)
            builder = builder.request(request)
        else:
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è –ª—É—á—à–µ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            request = HTTPXRequest(connect_timeout=30.0, read_timeout=30.0)
            builder = builder.request(request)

        app = builder.post_init(post_init).post_shutdown(post_shutdown).build()

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(button_handler))

        print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...\n", flush=True)
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!", flush=True)
        print("üì¨ –ù–æ–≤–æ—Å—Ç–∏ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞", flush=True)
        print("üí° –î–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É 103 –≤ main.py", flush=True)
        print("üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n", flush=True)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–æ–Ω –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ)
        app.run_polling(
            allowed_updates=["message", "callback_query"],
            drop_pending_updates=True,
            pool_timeout=30,
        )

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("   2. Telegram API –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –≤–∞—à–µ–π —Å–µ—Ç–∏")
        print("   3. –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        print("\nüîß –†–µ—à–µ–Ω–∏—è:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("   2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VPN/–ø—Ä–æ–∫—Å–∏")
        print("   3. –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Å—Ç—Ä–æ–∫—É: PROXY_URL=socks5://user:pass@host:port")
        print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å TELEGRAM_TOKEN –≤ .env")


if __name__ == "__main__":
    main()
